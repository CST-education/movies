{"version":3,"file":"static/js/Movie-page.15e3e446.chunk.js","mappings":"qLAAO,IAAMA,EAAW,+BACXC,EAAU,mCACVC,EAAU,oC,sMCARC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBH,EAAAA,GADwB,wCACgBC,EAAAA,KAIxC,SAASa,EAAeC,GAC7B,OAAOZ,EAAuB,GAAD,OACxBH,EAAAA,GADwB,kBACNe,EADM,4BACqBd,EAAAA,KAI7C,SAASe,EAAeD,GAC7B,OAAOZ,EAAuB,GAAD,OACxBH,EAAAA,GADwB,kBACNe,EADM,oBACad,EAAAA,KAIrC,SAASgB,EAAiBF,GAC/B,OAAOZ,EAAuB,GAAD,OACxBH,EAAAA,GADwB,kBACNe,EADM,4BACqBd,EAAAA,KAQ7C,SAASiB,EAAiBC,GAC/B,OAAOhB,EAAuB,GAAD,OACxBH,EAAAA,GADwB,+BACOmB,EADP,oBACwBlB,EAAAA,O,0IClCjDmB,EAAaC,EAAAA,GAAAA,KAAH,gIAQVC,EAAmBD,EAAAA,GAAAA,OAAH,sTAiBhBE,EAAkBF,EAAAA,GAAAA,MAAH,uUAmBN,SAASG,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCF,EAAAA,EAAAA,UAAS,MAAjD,eAAOG,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACHJ,GAGLK,EAAAA,GAA2BL,GAAQM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACzCJ,EAAgBI,QAEjB,CAACP,IAQJ,OACE,iCACE,UAACN,EAAD,CAAYc,KAAK,aAAaC,SART,SAAAC,GACvBA,EAAIC,iBACJV,EAAUW,SAASC,MAAMC,WAAWd,OAAOe,OAC3CH,SAASC,MAAMC,WAAWd,OAAOe,MAAQ,IAKvC,WACE,SAAClB,EAAD,CACEmB,KAAK,OACLR,KAAK,SACLS,aAAa,MACbC,WAAS,EACTC,YAAY,oBAId,SAACvB,EAAD,CAAkBoB,KAAK,SAAvB,uBAGDd,IACC,iCACE,+CAAuBF,EAAvB,QACA,wBACGE,EAAakB,KAAI,SAAAC,GAAE,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,mBAAcD,EAAGE,IAAzB,SAAgCF,EAAGG,SAD5BH,EAAGE","sources":["services/constList.js","services/movies-api.js","views/MoviesPage.js"],"sourcesContent":["export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'ec02f803a2c19321a23f2cc38614b1dd';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n","import { BASE_URL, API_KEY } from './constList';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchCastsById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchReviewsById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n}\n// `https://api.themoviedb.org/3/trending/get-trending`\n// `https://api.themoviedb.org/3/search/search-movies`\n// `https://api.themoviedb.org/3/movies/get-movie-details`\n// `https://api.themoviedb.org/3/movies/get-movie-credits`\n// `https://api.themoviedb.org/3/movies/get-movie-reviews`\nexport function fetchSearchMovie(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n}\n","import styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as moviesAPI from '../services/movies-api';\n\nconst SearchForm = styled.form`\n   {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    background-color: #fff;\n  }\n`;\nconst SearchFormButton = styled.button`\n   {\n    display: inline-block;\n    width: 80px;\n    height: 40px;\n    border: 1px solid #aaa;\n    opacity: 0.6;\n    font-weight: 600;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n  &: hover {\n    opacity: 1;\n  }\n`;\n\nconst SearchFormInput = styled.input`\n   {\n    display: inline-block;\n    width: 300px;\n    height: 40px;\n    margin: 15px;\n    font: inherit;\n    font-size: 20px;\n    border: 1px solid #ccc;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n  & :placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport default function MoviesPage() {\n  const [querry, setQuerry] = useState('');\n  const [searchResult, setSearchResult] = useState(null);\n\n  useEffect(() => {\n    if (!querry) {\n      return;\n    }\n    moviesAPI.fetchSearchMovie(querry).then(({ results }) => {\n      setSearchResult(results);\n    });\n  }, [querry]);\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n    setQuerry(document.forms.querryForm.querry.value);\n    document.forms.querryForm.querry.value = '';\n  };\n\n  return (\n    <>\n      <SearchForm name=\"querryForm\" onSubmit={handleFormSubmit}>\n        <SearchFormInput\n          type=\"text\"\n          name=\"querry\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies \"\n          // value={querry}\n          // onChange={handleChange}\n        />\n        <SearchFormButton type=\"submit\">Search</SearchFormButton>\n      </SearchForm>\n\n      {searchResult && (\n        <>\n          <h2>Result by search \"{querry}\"</h2>\n          <ul>\n            {searchResult.map(el => (\n              <li key={el.id}>\n                <Link to={`./movies/${el.id}`}>{el.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","IMG_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchMovies","fetchCastsById","movieId","fetchMovieById","fetchReviewsById","fetchSearchMovie","query","SearchForm","styled","SearchFormButton","SearchFormInput","MoviesPage","useState","querry","setQuerry","searchResult","setSearchResult","useEffect","moviesAPI","then","results","name","onSubmit","evt","preventDefault","document","forms","querryForm","value","type","autocomplete","autoFocus","placeholder","map","el","to","id","title"],"sourceRoot":""}