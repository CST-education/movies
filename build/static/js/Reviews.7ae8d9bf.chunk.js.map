{"version":3,"file":"static/js/Reviews.7ae8d9bf.chunk.js","mappings":"kKAEe,SAASA,EAAT,GAA+B,IAARC,EAAO,EAAPA,IACpC,OAAO,wBAAKA,M,2HCEC,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA2BN,GAASO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC1CJ,EAAWI,QAEZ,CAACR,KAGF,8BACGG,EAAQM,OAAS,GAChB,wBACGN,EAAQO,KAAI,SAAAC,GAAE,OACb,2BACE,oCAAYA,EAAGC,WACf,qCAAaD,EAAGE,aAFTF,EAAGG,UAOhB,SAAC,UAAD,CAAahB,IAAI","sources":["views/NotFoundMsg.js","views/Reviews.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function NotFoundMsg({ msg }) {\n  return <h2>{msg}</h2>;\n}\n\nNotFoundMsg.propTypes = {\n  msg: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as moviesAPI from '../services/movies-api';\nimport NotFoundMsg from './NotFoundMsg';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    moviesAPI.fetchReviewsById(movieId).then(({ results }) => {\n      setReviews(results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(el => (\n            <li key={el.id}>\n              <p>Author: {el.author}</p>\n              <p>Reviews: {el.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <NotFoundMsg msg=\"No Reviews on this movie...\" />\n      )}\n    </>\n  );\n}\n"],"names":["NotFoundMsg","msg","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","moviesAPI","then","results","length","map","el","author","content","id"],"sourceRoot":""}