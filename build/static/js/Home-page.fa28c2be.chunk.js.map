{"version":3,"file":"static/js/Home-page.fa28c2be.chunk.js","mappings":"oLAAO,IAAMA,EAAW,+BACXC,EAAU,mCACVC,EAAU,oC,sMCARC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBH,EAAAA,GADwB,wCACgBC,EAAAA,KAIxC,SAASa,EAAeC,GAC7B,OAAOZ,EAAuB,GAAD,OACxBH,EAAAA,GADwB,kBACNe,EADM,4BACqBd,EAAAA,KAI7C,SAASe,EAAeD,GAC7B,OAAOZ,EAAuB,GAAD,OACxBH,EAAAA,GADwB,kBACNe,EADM,oBACad,EAAAA,KAIrC,SAASgB,EAAiBF,GAC/B,OAAOZ,EAAuB,GAAD,OACxBH,EAAAA,GADwB,kBACNe,EADM,4BACqBd,EAAAA,KAQ7C,SAASiB,EAAiBC,GAC/B,OAAOhB,EAAuB,GAAD,OACxBH,EAAAA,GADwB,+BACOmB,EADP,oBACwBlB,EAAAA,O,2HClCxC,SAASmB,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAwBC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC9BJ,EAAUI,QAEX,KAGD,8BACGL,IACC,iCACE,4CACA,wBACGA,EAAOM,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,YAAD,OAAcF,EAAMG,IAC5BC,MAAO,CAAEC,KAAMf,IAHnB,SAMGU,EAAMM,SAPFN,EAAMG","sources":["services/constList.js","services/movies-api.js","views/HomePage.js"],"sourcesContent":["export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'ec02f803a2c19321a23f2cc38614b1dd';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n","import { BASE_URL, API_KEY } from './constList';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchCastsById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchReviewsById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n}\n// `https://api.themoviedb.org/3/trending/get-trending`\n// `https://api.themoviedb.org/3/search/search-movies`\n// `https://api.themoviedb.org/3/movies/get-movie-details`\n// `https://api.themoviedb.org/3/movies/get-movie-credits`\n// `https://api.themoviedb.org/3/movies/get-movie-reviews`\nexport function fetchSearchMovie(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport * as moviesAPI from '../services/movies-api';\n\nexport default function HomePage() {\n  const location = useLocation();\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    moviesAPI.fetchMovies().then(({ results }) => {\n      setMovies(results);\n    });\n  }, []);\n\n  return (\n    <>\n      {movies && (\n        <>\n          <h2>Trending today</h2>\n          <ul>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Link\n                  to={{\n                    pathname: `./movies/${movie.id}`,\n                    state: { from: location },\n                  }}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","IMG_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchMovies","fetchCastsById","movieId","fetchMovieById","fetchReviewsById","fetchSearchMovie","query","HomePage","location","useLocation","useState","movies","setMovies","useEffect","moviesAPI","then","results","map","movie","to","pathname","id","state","from","title"],"sourceRoot":""}