{"version":3,"file":"static/js/MovieDetails-page.f80652ce.chunk.js","mappings":"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","sources":["services/constList.js","services/movies-api.js","webpack://movies/./src/views/MoviePage.module.css?e8bb","views/MovieDetailsPage.js"],"sourcesContent":["export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'ec02f803a2c19321a23f2cc38614b1dd';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n","import { BASE_URL, API_KEY } from './constList';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchCastsById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchReviewsById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n}\n// `https://api.themoviedb.org/3/trending/get-trending`\n// `https://api.themoviedb.org/3/search/search-movies`\n// `https://api.themoviedb.org/3/movies/get-movie-details`\n// `https://api.themoviedb.org/3/movies/get-movie-credits`\n// `https://api.themoviedb.org/3/movies/get-movie-reviews`\nexport function fetchSearchMovie(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MoviePage_link__L8jEI\",\"activeLink\":\"MoviePage_activeLink__yu1L2 MoviePage_link__L8jEI\"};","import { useState, useEffect, lazy } from 'react';\nimport { useParams, Route } from 'react-router-dom';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { IMG_URL } from '../services/constList';\nimport * as moviesAPI from '../services/movies-api';\nimport { NavLink, useRouteMatch } from 'react-router-dom';\nimport styles from './MoviePage.module.css';\nimport styled from 'styled-components';\nimport img from '../images/images.jpg';\nconst Cast = lazy(() => import('./Cast.js' /* webpackChunkName: \"Cast\" */));\nconst Reviews = lazy(() =>\n  import('./Reviews.js' /* webpackChunkName: \"Reviews\" */)\n);\n\nconst GoBackButton = styled.button`\n   {\n    display: inline-block;\n    margin: 15px;\n    width: 120px;\n    height: 40px;\n    border: 1px solid #aaa;\n    opacity: 0.6;\n    font-weight: 600;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n  &: hover {\n    opacity: 1;\n  }\n`;\n\nexport default function MovieDetailsPage() {\n  const { url } = useRouteMatch();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    moviesAPI.fetchMovieById(movieId).then((data) => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  const onGoBackClick = () => {\n    history.push(location?.state?.from ?? '/');\n  };\n  const getImg = (movie) => {\n    if (movie.poster_path) {\n      return `${IMG_URL}${movie.poster_path}`;\n    } else if (movie.profile_path) {\n      return `${IMG_URL}${movie.profile_path}`;\n    }\n    return img;\n  };\n  return (\n    <>\n      <GoBackButton type='button' onClick={onGoBackClick}>\n        &laquo; Go back\n      </GoBackButton>\n      <br />\n      {movie && (\n        <>\n          <img src={getImg(movie)} width={300} alt={movie.title} />\n          <h2>\n            {movie.title} ({movie.release_date.substr(0, 4)})\n          </h2>\n          <p>\n            <b>User score: </b>\n            {movie.vote_average * 10 + '%'}\n          </p>\n          <p>\n            <b>Overview: </b>\n            {movie.overview}\n          </p>\n          <p>\n            <b>Genres: </b>\n\n            {movie.genres.reduce(function (acc, curVal) {\n              return acc + ' ' + curVal.name;\n            }, '')}\n          </p>\n        </>\n      )}\n      <hr />\n      <p>Additional information:</p>\n      <ul>\n        <li>\n          <NavLink\n            to={{\n              pathname: `${url}/reviews`,\n              state: { from: location },\n            }}\n            className={styles.link}\n            activeClassName={styles.activeLink}\n          >\n            Reviews\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to={{\n              pathname: `${url}/cast`,\n              state: { from: location },\n            }}\n            className={styles.link}\n            activeClassName={styles.activeLink}\n          >\n            Cast\n          </NavLink>\n        </li>\n      </ul>\n      <hr />\n\n      <Route path='/movies/:movieId/cast'>\n        <Cast />\n      </Route>\n\n      <Route path='/movies/:movieId/reviews'>\n        <Reviews />\n      </Route>\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","IMG_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchMovies","fetchCastsById","movieId","fetchMovieById","fetchReviewsById","fetchSearchMovie","query","Cast","lazy","Reviews","GoBackButton","styled","MovieDetailsPage","useRouteMatch","useParams","useState","movie","setMovie","history","useHistory","location","useLocation","useEffect","moviesAPI","then","data","type","onClick","push","state","from","src","poster_path","profile_path","img","getImg","width","alt","title","release_date","substr","vote_average","overview","genres","reduce","acc","curVal","name","to","pathname","className","styles","activeClassName","path"],"sourceRoot":""}